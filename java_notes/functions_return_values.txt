
### Function return values ###

There's one last essential concept about functions for us to discuss;
return values.
Some functions don't return a significant value, but others do.
It's important to understand what their values are, how to use them in
your code and how to make functions return useful values.

## What are return values ##

Return values are just what they sound like; the values that a function
returns when it completes. 

Look at this example:

const myText = "The weather is cold";
const newString = myText.replace("cold", "warm");
console.log(newString); // Should print "The weather is warm"
// the replace() string function takes a string,
// replaces one substring with another, and returns
// a new string with the replacement made

The replace() function is invoked on the myText string, and is passed
two parameters:

 - The substring to find ("cold")
 - The string to replace it with ("warm")

When the function compltes (finishes running), it returns a value, which
is a new string with the replacement made. In the code above, the result
of this return value is saved in the variable newString.

Generally, a return value is used where the function is an intermediate
step in a calculation of some kind. You want to get a final result,
which invloves some values that need to be calculated by a function.
After the function calculates the value, it can return the result so
it can be stored in a variable, and you can then use this variable
in the next stage of the calulation.
