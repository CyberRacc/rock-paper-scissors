Letâ€™s discuss parameters and arguments in the
context of the following example function:

 function favouriteAnimal(animal) {
   return animal + " is my favourite animal!"
 }

 console.log(favouriteAnimal('Goat'))

 In JavaScript, parameters are the items listed between the brackets in
 the function declaration. Function arguments are the actual values we
 decide to pass to the function. In the example above, the function
 definition is written on the first line: function favouriteAnimal(animal).
 The parameter, animal, is found inside the brackets. We could just as
 easily replace animal with pet, x or blag. But in this case, naming the
 parameter animal gives someone reading out code a bit of context so
 that they don't have to guess what animal may eventually contain.
 By putting animal in the brackets of the favouriteAnimal() function,
 we are telling JavaScript that we will send some value to our
 favouriteAnimal function. That means animal is just a placeholder for
 some future value. But what value are we sending? The last line,
 favouriteAnimal("Goat"), is where we are calling out favouriteAnimal
 function and passing the value "Goat" inside that function.
 Here, "Goat" is our argument. We are telling the favouriteAnimal function,
 "please send "Goat" to the favouriteAnimal function and use "Goat"
 wherever the "animal" placeholder is." Becuase of the flexibility that
 using a parameter provides, we can declare any animal to be our favourite.

 Make note of the fact that by calling favouriteAnimal() inside of
 console.log() with the argument "Goat", we get the return value of the
 function, string of "Goat is my favourite animal.", printed to the console.
 We're passing in a function call favouriteAnimal("Goat") as an argument
 in a different function call, log(). Keep this possibility i mind because
 you'll be passing in function calls as arguments fairly often.
 If we just called the function without console.logging what it returns,
 nothing would appear in the console but nonetheless the function would
 return that string.


